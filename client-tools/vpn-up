#!/bin/bash

# Copyright 2019 The OpenVPN+PiHole Image Authors All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo "hiya! (ن╹◡╹)੭``"
echo -n "Checking for API key..."
if [ ! -f "do-api.cpt" ]
then
    echo "do-api.cpt not found:"
    echo "    1. Create an API token (cloud.digitalocean.com/account/api/)"
    echo -n "    2. Paste your API token here to encrypt it: "
    read -r -s key
    echo
    echo "$key" > do-api
    ccrypt do-api
    echo "    3. Profit!"
else
    echo "Done"
fi

DEPS=(ccrypt curl jq ping ssh)
echo -n "Checking for dependencies..."
for i in "${DEPS[@]}"
do
    if ! command -v "$i" &> /dev/null
    then
        echo "Please install $i package"
        exit 1
    fi
done
echo "Done"

REGION="sgp1"
if [ -z "$REGION" ]
then
    echo "REGION env var not set, defaulting to: nyc3"
    REGION="nyc3"
fi

TAG='pihole-ovpn-1click'
TOKEN="$(ccrypt -c do-api.cpt)" || exit 1
TOKEN="$(echo "$TOKEN" | tr -d '\n')"

echo -n "Retrieving SSH key IDs..."
KEYS="$(curl -s -X GET -H "Authorization: Bearer $TOKEN" \
    https://api.digitalocean.com/v2/account/keys \
    | jq -r '.ssh_keys | .[] | .id' | paste -sd, -)" || exit 1
echo "Done; SSH key IDs: [$KEYS]"

DROPLET_CONFIG='{"name": "openvpn-pihole"'\
',"size":"s-1vcpu-1gb"'\
',"image":"pihole-18-04"'\
",\"region\":\"$REGION\""\
",\"ssh_keys\":[$KEYS]"\
",\"tags\":[\"$TAG\"]"\
'}'

echo -n "Creating droplet ($DROPLET_CONFIG)..."
DROPLET="$(curl -s -X POST \
    -H 'Content-Type: application/json'\
    -H "Authorization: Bearer $TOKEN"\
    -d "$DROPLET_CONFIG" \
    "https://api.digitalocean.com/v2/droplets")" || exit 1
ID="$(echo "$DROPLET" | jq -r '.droplet.id')"
echo "Done; Droplet with ID '$ID' created."

echo -n "Retrieving droplet IP..."
IP=""
while [ -z "$IP" ] || [ "$IP" == 'null' ]
do
DROPLET="$(curl -s -X GET -H "Authorization: Bearer $TOKEN" \
    https://api.digitalocean.com/v2/droplets/"$ID")"
IP="$(echo "$DROPLET" | jq -r '.droplet.networks.v4[] | select(.type=="public") | .ip_address')"
sleep 1
echo -n "."
done
echo "Done; Droplet IP is: $IP"

echo -n "Waiting for droplet network to come up..."
until ping -q -W 1 -c 1 "$IP" > /dev/null
do
    sleep 1
    echo -n "."
done
for i in {1..10}
do
    sleep 1
    echo -n "."
done
echo "Done"

echo "Let's check if VPN setup is complete:"
until ssh -q -oStrictHostKeyChecking=no "root@$IP" \
    "echo -n '    Waiting for client.ovpn...'
     until [ -f /root/client.ovpn ]
     do
         echo -n '.'
         sleep 1
     done"
do
    sleep 1
    echo -n "."
done
echo "Done"

echo -n "Retrieving ovpn config..."
until scp -q -oStrictHostKeyChecking=no "root@$IP:client.ovpn" .
do
    sleep 1
    echo -n "."
done
echo "Done"

echo "ヾ(^_^) byebye!!"
echo "Press any key to exit..."
read
